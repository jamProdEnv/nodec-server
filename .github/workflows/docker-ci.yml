name: Docker CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build and push Docker Hub image
      - name: Build Docker image
        run: docker build -t devjam12/node-server:latest .

      - name: Push Docker image
        run: docker push devjam12/node-server:latest

      # 4. Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 730335543972.dkr.ecr.us-east-1.amazonaws.com

            # Stop & remove existing node container
            docker stop node-app || true
            docker rm node-app || true

            # Ensure network exists
            docker network inspect backend >/dev/null 2>&1 || docker network create backend

            # Start Mongo container (idempotent)
            docker ps -a --format '{{.Names}}' | grep -w mongo >/dev/null 2>&1 || \
              docker run -d --name mongo --network backend mongo:latest

            # Run Node app container
            docker run -d \
              --name node-app \
              --network backend \
              -p 3000:3000 \
              -e MONGO_URL="mongodb://mongo:27017/mydatabase" \
              730335543972.dkr.ecr.us-east-1.amazonaws.com/node-cserver:latest
