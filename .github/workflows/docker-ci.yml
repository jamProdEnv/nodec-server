name: Docker CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to Docker Hub
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3. Delete existing Docker Hub tag (optional)
      - name: Delete existing remote DockerHub tag
        run: |
          curl -X DELETE \
            -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
            "https://hub.docker.com/v2/repositories/devjam12/node-server/tags/latest/" || true

      # 4. Remove old local image (runner cleanup)
      - name: Remove old local image
        run: docker rmi -f devjam12/node-server:latest || true

      # 5. Build new Docker image
      - name: Build Docker image
        run: docker build -t devjam12/node-server:latest .

      # 6. Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push devjam12/node-server:latest

      # 7. Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull devjam12/node-server:latest
            docker stop node-server || true
            docker rm node-server || true
            docker run -d --name node-server --network backend -p 3000:3000 devjam12/node-server:latest
